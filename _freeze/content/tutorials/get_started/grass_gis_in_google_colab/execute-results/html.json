{
  "hash": "3b23b75b5b2bd35a1c5611a04143c239",
  "result": {
    "markdown": "---\ntitle: Get started with GRASS GIS in Google Colab\nauthor: Veronica Andreo\ndate: '2024-04-12'\ndate-modified: today\nformat:\n  html:\n    toc: true\n    code-tools: true\n    code-copy: true\n    code-fold: false\ncategories:\n  - Python\n  - Google Colab\n  - beginner\nengine: jupyter\nexecute:\n  eval: false\n---\n\n# What is Colab?\n\nPerhaps you have heard of Google Colaboratory or simply Colab. This is a hosted\nJupyter Notebook service that requires no setup or configuration to use and \nprovides free access to computing resources, including GPUs and TPUs. \nColab is especially well suited to machine learning, data science, and education.\nFurthermore, it allows easy sharing of workflows which facilitates reproducibility.\n\nColab notebooks allow you to combine executable code and rich text in a single \ndocument, along with images, HTML, LaTeX and more. When you create your own \nColab notebooks, they are stored in your Google Drive account. You can easily \nshare your Colab notebooks with co-workers or friends, allowing them to comment\non your notebooks or even edit them. \n\n::: {.callout-note}\nSee Colab's FAQ for more details: <https://research.google.com/colaboratory/faq.html>\nand follow the Google Colab blog in Medium at <https://medium.com/google-colab>.\n:::\n\n# Why GRASS GIS in Colab?\n\nSince Colab offers Jupyter notebooks in a Linux environment \n**it is really easy to install or even compile GRASS GIS there**. \nAlso, because of the integration with Google Drive, it is a great resource to \nrun our workflows in the cloud and export the results or keep our GRASS \nprojects and code there. This clearly facilitates teaching workshops or courses\nsince attendants do not need to install or download anything on their own \nmachines. \n\nThere are a couple of things to consider when working with GRASS GIS within\nColab though. Users will need to \n*install GRASS GIS every time they start a new working session or notebook*. \nFurthermore, whatever files users download within Colab \n*will last only during the current session*. \nIf the runtime gets disconnected because of inactivity, downloaded data and\noutputs created within Colab, will be lost too. \nIf users instead, mount their own Google drive, download data and create their \nGRASS projects there, those will be preserved even if the runtime is \ndisconnected or the session closed.\n\n# Install GRASS GIS in Colab\n\nStart at <https://colab.research.google.com/> and create a new notebook. Let's first print system description to know where are we:\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\n!lsb_release -a\n```\n:::\n\n\nAt the time of writing this tutorial, Colab has Linux \n[Ubuntu 22.04.3 LTS](https://medium.com/google-colab/colab-updated-to-ubuntu-22-04-lts-709a91555b3c). \nSo we add the ppa:ubuntugis repository, update and install GRASS GIS. It might \ntake a couple of minutes according to the resources available.\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\n!add-apt-repository -y ppa:ubuntugis/ubuntugis-unstable\n!apt update\n!apt-get install -y grass-core grass-dev\nprint(\"INSTALLATION COMPLETE\")\n```\n:::\n\n\nCheck that GRASS GIS is installed by asking which version is there. \n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\n!grass --config version\n```\n:::\n\n\nLet's add the GRASS python packages to PATH to be able to import the\n`grass.script` and `grass.jupyter` libraries.\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\n# Import standard Python packages we need\nimport sys\nimport subprocess\n\n# Ask GRASS GIS where its Python packages are to be able to run it from the notebook\nsys.path.append(\n    subprocess.check_output([\"grass\", \"--config\", \"python_path\"], text=True).strip()\n)\n```\n:::\n\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\n# Import the GRASS GIS packages\nimport grass.script as gs\nimport grass.jupyter as gj\n```\n:::\n\n\n# Download sample data\n\nBy default we have access to the `/content` folder within Colab, and any data we \ndownload will be placed there. We can change that of course, it is just a Linux\nfile system. In any case, we should bare in mind that whatever data we download \nwithin Colab, will disappear if the runtime gets disconected because of inactivity\nor once we close the Colab session. \n\nLet's get the North Carolina sample dataset into Colab to show a data \ndownload workflow.\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\n!wget -c https://grass.osgeo.org/sampledata/north_carolina/nc_spm_08_grass7.zip -O nc.zip\n```\n:::\n\n\nWe unzip the downloaded file in /content\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\n!unzip nc.zip\n```\n:::\n\n\nand finally check it is indeed there:\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\nimport os\n\n# List files and directories\nos.listdir()\n```\n:::\n\n\nYou should see *nc_spm_08_grass7* sample dataset, which is a GRASS project.\n\n# Start GRASS in Colab\n\nWe have GRASS GIS installed and a sample project to play around, so we are ready\nto start GRASS GIS within the North Carolina project.\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\n# Start GRASS in default project mapset\nsession = gj.init(\"nc_spm_08_grass7\")\n```\n:::\n\n\nLet's show the current GRASS GIS settings and check if the session actually\nworks:\n\n::: {.cell execution_count=10}\n``` {.python .cell-code}\n# GRASS was started in default project mapset called PERMANENT\ngs.gisenv()\n```\n:::\n\n\nJust as an example, we will list the raster maps and display one of them using \nthe InteractiveMap class.\n\n::: {.cell execution_count=11}\n``` {.python .cell-code}\ngs.list_grouped(type=\"raster\")\n```\n:::\n\n\n::: {.cell execution_count=12}\n``` {.python .cell-code}\nm = gj.InteractiveMap()\nm.add_raster(\"landclass96\")\nm.show()\n```\n:::\n\n\n# Connect Colab with Google Drive\n\nIf we do not want to loose our GRASS projects when closing the Colab notebook, \nwe can connect Colab with our Google Drive and upload, download or create our \nprojects there. To be able to do any of that, we need to mount our drive first\n(i.e., similar to what we do with external drives). \nWe first import the `drive` library.\n\n::: {.cell execution_count=13}\n``` {.python .cell-code}\nfrom google.colab import drive \n```\n:::\n\n\nThen, we define the mounting point. Running the cell below triggers a dialog to \ngrant Colab access to our drive. It is possible to change accounts, too. Once\nthat is complete, we will have access to everything we have in our GDrive folders\nand we can browse the content either with commands or from the left panel in\nthe Colab notebook.\n\n::: {.cell execution_count=14}\n``` {.python .cell-code}\ndrive.mount(\"/content/drive\")\n```\n:::\n\n\nWe can also mount our drive directly from the Colab interface as shown below: \n\n![](images/colab_mount_gdrive.png){.preview-image}\n\nOnce the GDrive is mounted, we can either create a new project and start GRASS\nGIS there as shown above or start GRASS within an existing GRASS project in\nGDrive. Importantly, we can then process and analyse our data so that our data\nwill remain in GDrive for the next time.\n\n# Create a new GRASS project in Google Drive\n\nTo create a new project we can use the `create_project` function from the \ngrass.script library as shown in the \n[GRASS and Python tutorial](). \nLet's, for example, create a project with the EPSG code option:\n\n::: {.cell execution_count=15}\n``` {.python .cell-code}\ngs.create_project(\"/content/drive/MyDrive/grassdata/latlong_wgs84\", epsg=\"4326\")\n```\n:::\n\n\n# Start GRASS GIS in an existing project\n\nEither if you just created the project and want to start GRASS GIS there or if \nyou already have your GRASS projects in GDrive, you just need to start GRASS \nwherever the project is, as shown above, given that GRASS GIS has been \ninstalled in the Colab session and libraries imported.\n\n**Cool, ah?! Enjoy!** {{< fa rocket >}}\n\n\n***\n\n:::{.smaller}\nThe development of this tutorial was funded by the US \n[National Science Foundation (NSF)](https://www.nsf.gov/), \naward [2303651](https://www.nsf.gov/awardsearch/showAward?AWD_ID=2303651).\n:::\n\n",
    "supporting": [
      "grass_gis_in_google_colab_files"
    ],
    "filters": [],
    "includes": {}
  }
}